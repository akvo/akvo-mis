# Generated by Django 4.0.4 on 2025-05-21 09:01

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ViewPendingDataApproval',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1)),
                ('pending_level', models.IntegerField()),
            ],
            options={
                'db_table': 'view_pending_approval',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default=None, null=True)),
                ('value', models.FloatField(default=None, null=True)),
                ('options', models.JSONField(default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'answer_history',
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default=None, null=True)),
                ('value', models.FloatField(default=None, null=True)),
                ('options', models.JSONField(default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'answer',
            },
        ),
        migrations.CreateModel(
            name='FormData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('geo', models.JSONField(default=None, null=True)),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'data',
            },
        ),
        migrations.CreateModel(
            name='PendingAnswerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default=None, null=True)),
                ('value', models.FloatField(default=None, null=True)),
                ('options', models.JSONField(default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'pending_answer_history',
            },
        ),
        migrations.CreateModel(
            name='PendingAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default=None, null=True)),
                ('value', models.FloatField(default=None, null=True)),
                ('options', models.JSONField(default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'pending_answer',
            },
        ),
        migrations.CreateModel(
            name='PendingDataApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Rejected')], default=1)),
            ],
            options={
                'db_table': 'pending_data_approval',
            },
        ),
        migrations.CreateModel(
            name='PendingDataBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('uuid', models.UUIDField(default=None, null=True)),
                ('file', models.URLField(default=None, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'batch',
            },
        ),
        migrations.CreateModel(
            name='PendingDataBatchComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'batch_comment',
            },
        ),
        migrations.CreateModel(
            name='PendingFormData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField()),
                ('geo', models.JSONField(default=None, null=True)),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=None, null=True)),
                ('duration', models.IntegerField(default=0)),
                ('submitter', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'pending_data',
            },
        ),
    ]
